{"ast":null,"code":"var _jsxFileName = \"/Users/miklosszabo/codecool/reactinitial/src/components/Subscription.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subscription = ({\n  item\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [isSucces, setIsSucces] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isShow, setIsShow] = useState(true);\n\n  const emailVal = str => {\n    return str.includes('@') && str.includes('.');\n  };\n\n  const sendEmail = str => {\n    setLoading(true);\n    setIsShow(false);\n    fetch('https://seriescharacters.com/api/newsletter', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        'email': str\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setIsSucces(true);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error:', error);\n      setIsError(true);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !emailVal(email),\n      onClick: () => sendEmail(email),\n      children: `Request more info about ${item.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Subscription, \"qgOnlQ0pSkIv/1svzibG558kozE=\");\n\n_c = Subscription;\nexport default Subscription;\n{\n  /* <div>     \n  {loading && <LoadingMask/>}\n  <h3>Subscribe to our newsletter</h3>\n  {isShow && <div>\n    <input type='text' \n           value={email} \n           onChange={(e) => setEmail(e.target.value)}\n    />\n    <button disabled={!emailVal(email)} onClick={() => sendEmail(email)}>Click me</button>\n  </div>}\n  {isError && \n  <h2>Oops, something happened.</h2>}\n  {isSucces && \n  <h2>Subscribed</h2>\n  } \n  \n  </div> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Subscription\");","map":{"version":3,"sources":["/Users/miklosszabo/codecool/reactinitial/src/components/Subscription.js"],"names":["React","useState","Subscription","item","email","setEmail","isError","setIsError","isSucces","setIsSucces","loading","setLoading","isShow","setIsShow","emailVal","str","includes","sendEmail","fetch","method","headers","body","then","res","json","data","console","log","catch","error","name","e","target","value"],"mappings":";;;AAEA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;;AAGA,QAAMa,QAAQ,GAAIC,GAAD,IAAS;AACtB,WAAOA,GAAG,CAACC,QAAJ,CAAa,GAAb,KAAqBD,GAAG,CAACC,QAAJ,CAAa,GAAb,CAA5B;AACD,GAFH;;AAIE,QAAMC,SAAS,GAAIF,GAAD,IAAS;AACzBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAK,IAAAA,KAAK,CAAC,6CAAD,EAAgD;AACpDC,MAAAA,MAAM,EAAE,MAD4C;AAEpDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF2C;AAKpDC,MAAAA,IAAI,EAAE;AACD,iBAAUN;AADT;AAL8C,KAAhD,CAAL,CAQCO,IARD,CAQMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARb,EASCF,IATD,CASMG,IAAI,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACChB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACP,KAbA,EAcCiB,KAdD,CAcQC,KAAD,IAAW;AACfH,MAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAtB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAlBA;AAmBQ,GAtBV;;AAwBF,sBACI;AAAA,4BACI;AAAQ,MAAA,QAAQ,EAAE,CAACG,QAAQ,CAACV,KAAD,CAA3B;AAAoC,MAAA,OAAO,EAAE,MAAMa,SAAS,CAACb,KAAD,CAA5D;AAAA,gBAAuE,2BAA0BD,IAAI,CAAC2B,IAAK;AAA3G;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACQ,MAAA,KAAK,EAAE1B,KADf;AAEQ,MAAA,QAAQ,EAAG2B,CAAD,IAAO1B,QAAQ,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA9CD;;GAAM/B,Y;;KAAAA,Y;AAgDN,eAAeA,YAAf;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAU","sourcesContent":["\n\nimport React,{useState} from 'react';\n\nconst Subscription = ({item}) => {\n\n    const [email, setEmail] = useState('')\n    const [isError, setIsError] = useState(false)\n    const [isSucces, setIsSucces] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [isShow, setIsShow] = useState(true)\n\n\n    const emailVal = (str) => {\n        return str.includes('@') && str.includes('.')\n      }\n\n      const sendEmail = (str) => {\n        setLoading(true)\n        setIsShow(false)\n        fetch('https://seriescharacters.com/api/newsletter', {\n         method: 'POST',\n         headers: {\n           'Content-Type': 'application/json'   \n         },\n         body: {\n              'email' : str\n         }\n      }).then(res => res.json())\n        .then(data => {\n              console.log(data)\n               setIsSucces(true)\n               setLoading(false)\n       })\n        .catch((error) => {\n           console.error('Error:', error)\n           setIsError(true)\n           setLoading(false)\n       })\n               }\n   \n    return (\n        <div>\n            <button disabled={!emailVal(email)} onClick={() => sendEmail(email)}>{`Request more info about ${item.name}`}</button>\n            <input type='text'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n            />\n        </div>\n    )\n}\n\nexport default Subscription\n\n\n{/* <div>     \n{loading && <LoadingMask/>}\n<h3>Subscribe to our newsletter</h3>\n{isShow && <div>\n   <input type='text' \n          value={email} \n          onChange={(e) => setEmail(e.target.value)}\n   />\n   <button disabled={!emailVal(email)} onClick={() => sendEmail(email)}>Click me</button>\n</div>}\n{isError && \n<h2>Oops, something happened.</h2>}\n{isSucces && \n<h2>Subscribed</h2>\n} \n \n</div> */}\n"]},"metadata":{},"sourceType":"module"}