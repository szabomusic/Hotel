{"ast":null,"code":"var _jsxFileName = \"/Users/miklosszabo/codecool/reactinitial/src/components/Subscription.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Subscription = ({\n  item\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [isSucces, setIsSucces] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [isShow, setIsShow] = useState(true);\n\n  const emailVal = str => {\n    return str.includes('@') && str.includes('.');\n  };\n\n  const sendEmail = str => {\n    setLoading(true);\n    setIsShow(false);\n    fetch('api/hotels/subscribe', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: {\n        'email': str,\n        'hotel': str\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      setIsSucces(true);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error:', error);\n      setIsError(true);\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !emailVal(email),\n      onClick: () => sendEmail(email),\n      children: `Request more info about ${item.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), isSucces && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subscribed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Subscription, \"gL0ABmAWucebc9z0sfYPlDgyoyw=\");\n\n_c = Subscription;\nexport default Subscription;\n\nvar _c;\n\n$RefreshReg$(_c, \"Subscription\");","map":{"version":3,"sources":["/Users/miklosszabo/codecool/reactinitial/src/components/Subscription.js"],"names":["React","useState","Subscription","item","email","setEmail","isSucces","setIsSucces","loading","setLoading","isShow","setIsShow","emailVal","str","includes","sendEmail","fetch","method","headers","body","then","res","json","data","console","log","catch","error","setIsError","name","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAAyBN,QAAQ,CAAC,KAAD,CAAvC;AACA,QAAK,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAArC;AACA,QAAK,CAACS,MAAD,EAASC,SAAT,IAAqBV,QAAQ,CAAC,IAAD,CAAlC;;AAKA,QAAMW,QAAQ,GAAIC,GAAD,IAAS;AACtB,WAAOA,GAAG,CAACC,QAAJ,CAAa,GAAb,KAAqBD,GAAG,CAACC,QAAJ,CAAa,GAAb,CAA5B;AACD,GAFH;;AAIE,QAAMC,SAAS,GAAIF,GAAD,IAAS;AACzBJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACDK,IAAAA,KAAK,CAAC,sBAAD,EAAyB;AAC5BC,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFmB;AAK5BC,MAAAA,IAAI,EAAE;AACD,iBAAUN,GADT;AAED,iBAAQA;AAFP;AALsB,KAAzB,CAAL,CASEO,IATF,CASOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EATd,EAUEF,IAVF,CAUOG,IAAI,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACChB,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACP,KAdD,EAeEiB,KAfF,CAeSC,KAAD,IAAW;AACfH,MAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACAC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAnB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAnBD;AAoBS,GAvBV;;AAyBF,sBACI;AAAA,4BACI;AAAQ,MAAA,QAAQ,EAAE,CAACG,QAAQ,CAACR,KAAD,CAA3B;AAAoC,MAAA,OAAO,EAAE,MAAMW,SAAS,CAACX,KAAD,CAA5D;AAAA,gBAAuE,2BAA0BD,IAAI,CAAC0B,IAAK;AAA3G;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AACQ,MAAA,KAAK,EAAEzB,KADf;AAEQ,MAAA,QAAQ,EAAG0B,CAAD,IAAOzB,QAAQ,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV;AAFjC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMQ1B,QAAQ,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlDD;;GAAMJ,Y;;KAAAA,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import React,{useState} from 'react';\n\nconst Subscription = ({item}) => {\n\n    const [email, setEmail] = useState('')\n    const [isSucces, setIsSucces]= useState(false)\n    const[loading, setLoading] = useState(false)\n    const[isShow, setIsShow]= useState(true)\n\n    \n\n\n    const emailVal = (str) => {\n        return str.includes('@') && str.includes('.')\n      }\n\n      const sendEmail = (str) => {\n        setLoading(true)\n        setIsShow(false)\n       fetch('api/hotels/subscribe', {\n         method: 'POST',\n         headers: {\n           'Content-Type': 'application/json'   \n         },\n         body: {\n              'email' : str,\n              'hotel':str\n         }\n      }).then(res => res.json())\n        .then(data => {\n              console.log(data)\n               setIsSucces(true)\n               setLoading(false)\n       })\n        .catch((error) => {\n           console.error('Error:', error)\n           setIsError(true)\n           setLoading(false)\n       })\n               }\n   \n    return (\n        <div>\n            <button disabled={!emailVal(email)} onClick={() => sendEmail(email)}>{`Request more info about ${item.name}`}</button>\n            <input type='text'\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n            />\n               {isSucces && \n            <h2>Subscribed</h2>}\n        </div>\n    )\n}\n\nexport default Subscription\n\n\n\n  "]},"metadata":{},"sourceType":"module"}