{"ast":null,"code":"var _jsxFileName = \"/Users/miklosszabo/codecool/reactinitial/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport LoadingMask from './components/LoadingMask';\nimport Hotels from './components/Hotels'; // import Subscription from './components/Subscription';\n\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = false; // const fetchData = async () => {\n  //   setIsLoading(true)\n  //   const res = await fetch('api/hotels')\n  // const data = await res.json()\n  //   setData(data)\n  //   setIsLoading(false)\n  // }\n  // useEffect(() => {\n  //   fetchData()  \n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hotels\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(LoadingMask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this) : data.map((item, i) => /*#__PURE__*/_jsxDEV(Hotels, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/miklosszabo/codecool/reactinitial/src/App.js"],"names":["React","useState","useEffect","LoadingMask","Hotels","App","data","setData","isLoading","setIsLoading","map","item","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA6B,KAAnC,CAHgB,CAKhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEED,SAAS,gBAAG,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GACTF,IAAI,CAACI,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,kBAAa,QAAC,MAAD;AAEF,MAAA,IAAI,EAAED;AAFJ,OACGC,CADH;AAAA;AAAA;AAAA;AAAA,YAAtB,CAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA3BD;;GAAMP,G;;KAAAA,G;AA6BN,eAAeA,GAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport LoadingMask from './components/LoadingMask'\nimport Hotels from './components/Hotels';\n// import Subscription from './components/Subscription';\nimport './App.css'\n\nconst App = () => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = (false);\n\n  // const fetchData = async () => {\n  //   setIsLoading(true)\n  //   const res = await fetch('api/hotels')\n  // const data = await res.json()\n  //   setData(data)\n  //   setIsLoading(false)\n  // }\n  // useEffect(() => {\n  //   fetchData()  \n  // },[])\n\n  return (\n    <div className=\"App\">\n     <h1>Hotels</h1>\n     {isLoading ? <LoadingMask/>\n     :data.map((item, i) => <Hotels\n                          key={i} \n                          item={item}\n                               />)}\n     {/* <Subscription/> */}\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}