{"ast":null,"code":"import { createServer, Model } from 'miragejs';\nexport function makeServer({\n  environment = 'test'\n} = {}) {\n  let server = createServer({\n    environment,\n    models: {\n      hotel: Model\n    },\n\n    seeds(server) {\n      server.create('hotel', {\n        name: 'Hotel Nulla sit amet',\n        stars: 3,\n        city: \"Los Angeles\"\n      });\n      server.create('hotel', {\n        name: 'Hotel Curabitur suscipit suscipit',\n        stars: 4,\n        city: \"Las Vegas\"\n      });\n      server.create('hotel', {\n        name: 'Hotel Donec id justo',\n        stars: 5,\n        city: \"San Francisco\"\n      });\n    },\n\n    routes() {\n      this.namespace = 'api/hotels';\n      this.timing = 2000;\n      this.get('/', (schema, request) => {\n        return schema.hotels.all().models;\n      });\n      this.post('/subscribe', (schema, request) => {\n        let attrs = JSON.parse(request.requestBody);\n\n        if (attrs.email === \"a@b.c\" && attrs.hotel === \"Hotel Curabitur suscipit suscipit\") {\n          return {\n            success: false\n          };\n        }\n\n        return {\n          success: true\n        };\n      });\n    }\n\n  });\n  return server;\n}","map":{"version":3,"sources":["/Users/miklosszabo/codecool/reactinitial/src/api/mockserver.js"],"names":["createServer","Model","makeServer","environment","server","models","hotel","seeds","create","name","stars","city","routes","namespace","timing","get","schema","request","hotels","all","post","attrs","JSON","parse","requestBody","email","success"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,KAAvB,QAAoC,UAApC;AACA,OAAO,SAASC,UAAT,CAAoB;AAAEC,EAAAA,WAAW,GAAG;AAAhB,IAA2B,EAA/C,EAAmD;AACxD,MAAIC,MAAM,GAAGJ,YAAY,CAAC;AACxBG,IAAAA,WADwB;AAExBE,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEL;AADD,KAFgB;;AAKxBM,IAAAA,KAAK,CAACH,MAAD,EAAS;AACZA,MAAAA,MAAM,CAACI,MAAP,CAAc,OAAd,EAAuB;AACrBC,QAAAA,IAAI,EAAE,sBADe;AAErBC,QAAAA,KAAK,EAAE,CAFc;AAGrBC,QAAAA,IAAI,EAAE;AAHe,OAAvB;AAKAP,MAAAA,MAAM,CAACI,MAAP,CAAc,OAAd,EAAuB;AACrBC,QAAAA,IAAI,EAAE,mCADe;AAErBC,QAAAA,KAAK,EAAE,CAFc;AAGrBC,QAAAA,IAAI,EAAE;AAHe,OAAvB;AAKAP,MAAAA,MAAM,CAACI,MAAP,CAAc,OAAd,EAAuB;AACrBC,QAAAA,IAAI,EAAE,sBADe;AAErBC,QAAAA,KAAK,EAAE,CAFc;AAGrBC,QAAAA,IAAI,EAAE;AAHe,OAAvB;AAKD,KArBuB;;AAsBxBC,IAAAA,MAAM,GAAG;AACP,WAAKC,SAAL,GAAiB,YAAjB;AACA,WAAKC,MAAL,GAAc,IAAd;AAEA,WAAKC,GAAL,CAAS,GAAT,EAAc,CAACC,MAAD,EAASC,OAAT,KAAqB;AACjC,eAAOD,MAAM,CAACE,MAAP,CAAcC,GAAd,GAAoBd,MAA3B;AACD,OAFD;AAGA,WAAKe,IAAL,CAAU,YAAV,EAAwB,CAACJ,MAAD,EAASC,OAAT,KAAqB;AAC3C,YAAII,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWN,OAAO,CAACO,WAAnB,CAAZ;;AACA,YAAIH,KAAK,CAACI,KAAN,KAAgB,OAAhB,IAA2BJ,KAAK,CAACf,KAAN,KAAgB,mCAA/C,EAAoF;AAClF,iBAAO;AAAEoB,YAAAA,OAAO,EAAE;AAAX,WAAP;AACD;;AACD,eAAQ;AAAEA,UAAAA,OAAO,EAAE;AAAX,SAAR;AACD,OAND;AAOD;;AApCuB,GAAD,CAAzB;AAsCA,SAAOtB,MAAP;AACD","sourcesContent":["import { createServer, Model } from 'miragejs';\nexport function makeServer({ environment = 'test' } = {}) {\n  let server = createServer({\n    environment,\n    models: {\n      hotel: Model,\n    },\n    seeds(server) {\n      server.create('hotel', {\n        name: 'Hotel Nulla sit amet',\n        stars: 3,\n        city: \"Los Angeles\",\n      });\n      server.create('hotel', {\n        name: 'Hotel Curabitur suscipit suscipit',\n        stars: 4,\n        city: \"Las Vegas\",\n      });\n      server.create('hotel', {\n        name: 'Hotel Donec id justo',\n        stars: 5,\n        city: \"San Francisco\",\n      });\n    },\n    routes() {\n      this.namespace = 'api/hotels';\n      this.timing = 2000\n\n      this.get('/', (schema, request) => {\n        return schema.hotels.all().models;\n      });\n      this.post('/subscribe', (schema, request) => {\n        let attrs = JSON.parse(request.requestBody);\n        if (attrs.email === \"a@b.c\" && attrs.hotel === \"Hotel Curabitur suscipit suscipit\") {\n          return { success: false };\n        }\n        return  { success: true };\n      });\n    },\n  });\n  return server;\n}\n"]},"metadata":{},"sourceType":"module"}